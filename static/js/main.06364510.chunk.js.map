{"version":3,"sources":["Listdata.js","Pages.js","taiwan.js","Nav.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["Listdata","datas","setId","className","map","data","properties","name","phone","id","address","key","onClick","Pages","datasL","setPageD","pageD","useState","page","setPage","pages","setPages","useEffect","counterPages","L","num","Math","ceil","i","push","filterpages","slice","area_data","citys","Nav","cityF","setCityF","setAreaF","areaF","setKeyWord","sliceData","filterDatas","value","onChange","e","target","city","item","htmlFor","type","length","Main","position","Map","center","zoom","TileLayer","url","attribution","coordinates","geometry","positionM","Marker","Popup","App","setDatas","keyWord","fetchDatas","positionData","a","fetch","response","json","result","features","filter","county","town","includes","find","element","array","indexOf","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sSAsBeA,MApBf,YAAqC,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,MACvB,OACI,wBAAIC,UAAU,aAENF,EAAMG,KAAI,SAAAC,GAAS,IAAD,EACuBA,EAAKC,WAAlCC,EADM,EACNA,KAAMC,EADA,EACAA,MAAOC,EADP,EACOA,GAAIC,EADX,EACWA,QACzB,OACI,wBAAIC,IAAKF,EAAIN,UAAU,YAAYS,QAAS,kBAAMV,EAAMO,KACpD,4BAAKF,GACL,2BAAIC,GACJ,2BAAIE,GACJ,0CAAML,EAAKC,WAAL,WAAN,gBAAwCD,EAAKC,WAAL,kB,MCiDrDO,MA3Df,YAAoD,IAAnCC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,MAAOd,EAAS,EAATA,MAAS,EACvBe,mBAAS,GADc,mBACxCC,EADwC,KAClCC,EADkC,OAErBF,mBAAS,IAFY,mBAExCG,EAFwC,KAEjCC,EAFiC,KAG/CC,qBAAU,WACNC,EAAaT,KACd,CAACA,IAEJ,IAAMS,EAAe,SAAAC,GACjB,IAAIC,EAAMD,EAAI,EACRJ,EAAQ,GACdK,EAAMC,KAAKC,KAAKF,GAChB,IAAK,IAAIG,EAAI,EAAGA,EAAIH,EAAKG,IACrBR,EAAMS,KAAKD,GAEfP,EAASD,GACTD,EAAQH,IAGNc,EAAcV,EAAMW,MAAa,EAAPb,EAAW,EAAU,EAAPA,GAC9C,OACI,wBAAIf,UAAU,SACV,4BACI,4BACIA,UAAqB,IAAVa,EAAc,OAAS,GAClCJ,QAAS,WACLV,EAAM,IACNa,EAASC,EAAQ,GACbA,IAAUc,EAAYC,MAAM,GAAG,IAC/BZ,EAAQD,EAAO,KAN3B,WAUHY,EAAY1B,KAAI,SAACc,EAAMU,GACpB,OACI,wBAAIjB,IAAKiB,GACL,4BACIzB,UAAWe,IAASF,EAAQ,SAAW,GACvCJ,QAAS,WACLV,EAAM,IACNa,EAASG,KACTA,OAIpB,4BACI,4BACIf,UAAWa,IAAUI,EAAMW,OAAO,GAAG,GAAK,OAAS,GACnDnB,QAAS,WACLV,EAAM,IACNa,EAASC,EAAQ,GACbA,IAAUc,EAAYC,OAAO,GAAG,IAChCZ,EAAQD,EAAO,KAN3B,aChDHc,EAAY,CACrB,qBAAO,CACH,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,sBAEjF,qBAAO,CACH,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,sBAExM,qBAAO,CACH,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,sBAE9C,qBAAO,CACH,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,sBAExF,qBAAO,CACH,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,sBAExF,qBAAO,CACH,eAAM,eAAM,sBAEhB,qBAAO,CACH,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,sBAE3H,qBAAO,CACH,eAAM,eAAM,eAAM,eAAM,eAAM,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,sBAEnM,qBAAO,CACH,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,sBAExF,qBAAO,CACH,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,sBAEnL,qBAAO,CACH,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,sBAEzI,qBAAO,CACH,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,4BAE3H,qBAAO,CACH,eAAM,gBAEV,qBAAO,CACH,qBAAO,eAAM,eAAM,eAAM,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,sBAE7P,qBAAO,CACH,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,4BAEvQ,qBAAO,CACH,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,4BAEpO,qBAAO,CACH,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,sBAEjF,qBAAO,CACH,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,sBAExF,qBAAO,CACH,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,4BAE7G,qBAAO,CACH,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,sBAEvC,qBAAO,CACH,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,sBAEvC,qBAAO,CACH,qBAAO,qBAAO,qBAAO,uBAGhBC,EAAQ,CACjB,KAAQ,CACJ,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,uB,MCzBOC,MA5Df,YAAgH,IAAjGC,EAAgG,EAAhGA,MAAOC,EAAyF,EAAzFA,SAAUC,EAA+E,EAA/EA,SAAUC,EAAqE,EAArEA,MAAOC,EAA8D,EAA9DA,WAAYC,EAAkD,EAAlDA,UAAWC,EAAuC,EAAvCA,YAAa1B,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,MAAOd,EAAS,EAATA,MAClG,OACI,yBAAKC,UAAU,WACX,yBAAKA,UAAU,kBACX,wBAAIA,UAAU,aAAd,aACA,yBAAKA,UAAU,iBACX,4BACIuC,MAAOP,GAAgB,GACvBhC,UAAU,mBACVwC,SAAU,SAAAC,GACNR,EAASQ,EAAEC,OAAOH,OAClBL,EAASL,EAAUY,EAAEC,OAAOH,OAAO,IACnC3B,EAAS,KAEb,sEAEIkB,EAAM5B,KAAKD,KAAI,SAAC0C,EAAMlB,GAClB,OAAO,4BAAQc,MAAOI,EAAMnC,IAAKiB,GAAKkB,OAIlD,4BACI3C,UAAU,iBACVwC,SAAU,SAAAC,GACNP,EAASO,EAAEC,OAAOH,OAClB3B,EAAS,IAEb2B,MAAOJ,GAAgB,IACvB,sEAEIH,EACIH,EAAUG,GAAO/B,KAAI,SAAC2C,EAAMnB,GACxB,OAAO,4BAAQjB,IAAKiB,EAAGc,MAAOK,GAAOA,MACpC,KAIrB,yBAAK5C,UAAU,cACX,2BAAO6C,QAAQ,eAAf,sBACA,2BACIC,KAAK,OACL1C,KAAK,cACLJ,UAAU,cACVwC,SAAU,SAAAC,GACNL,EAAWK,EAAEC,OAAOH,OACpB3B,EAAS,QAKzB,kBAAC,EAAD,CAAUd,MAAOuC,EAAWtC,MAAOA,IACnC,kBAAC,EAAD,CACIA,MAAOA,EACPc,MAAOA,EACPF,OAAQ2B,EAAYS,OACpBnC,SAAUA,M,sCCvBXoC,MAlCf,YAAwC,IAAxBX,EAAuB,EAAvBA,UAAWY,EAAY,EAAZA,SAEvB,OACI,kBAACC,EAAA,EAAD,CAAKC,OAAQF,EAAUG,KAAM,GAAI9C,GAAG,OAChC,kBAAC+C,EAAA,EAAD,CACIC,IAAI,qDACJC,YAAY,2EAGZlB,EAAUpC,KAAI,SAAAC,GAAS,IACXsD,EAAgBtD,EAAKuD,SAArBD,YADU,EAEmBtD,EAAKC,WAAlCC,EAFU,EAEVA,KAAMC,EAFI,EAEJA,MAAOC,EAFH,EAEGA,GAAIC,EAFP,EAEOA,QACnBmD,EAAY,CAACF,EAAY,GAAIA,EAAY,IAC/C,OACI,kBAACG,EAAA,EAAD,CACIV,SAAUS,EACVlD,IAAKF,EACLA,GAAIA,GACJ,kBAACsD,EAAA,EAAD,KACI,4BAAKxD,GACL,2BAAIC,GACJ,2BAAIE,GACJ,0CAAML,EAAKC,WAAL,WAAN,gBAAwCD,EAAKC,WAAL,aARhD,Y,MCuDT0D,MAnEf,WAAgB,IAAD,EACa/C,mBAAS,IADtB,mBACNhB,EADM,KACCgE,EADD,OAEahD,mBAAS,IAFtB,mBAENkB,EAFM,KAECC,EAFD,OAGanB,mBAAS,IAHtB,mBAGNqB,EAHM,KAGCD,EAHD,OAIiBpB,mBAAS,IAJ1B,mBAINiD,EAJM,KAIG3B,EAJH,OAKatB,mBAAS,GALtB,mBAKND,EALM,KAKCD,EALD,OAMOE,mBAAS,IANhB,mBAMNR,EANM,KAMFP,EANE,KAOboB,qBAAU,WACR6C,MACC,IAEH,IAuBIC,EAMAhB,EA7BEe,EAAU,uCAAG,8BAAAE,EAAA,4DACL,6EADK,SAEMC,MADX,8EADK,cAEXC,EAFW,gBAGIA,EAASC,OAHb,OAGXC,EAHW,OAIjBR,EAASQ,EAAOC,UAChBtC,EAAS,sBACTC,EAAS,sBANQ,4CAAH,qDASVI,EAAcxC,EAAM0E,QAAO,SAAAtE,GAAS,IAAD,EACLA,EAAKC,WAA/BsE,EAD+B,EAC/BA,OAAQC,EADuB,EACvBA,KAAMnE,EADiB,EACjBA,QACtB,OAAI4B,GAASH,EACJyC,IAAWzC,GAAS0C,IAASvC,EAC3BH,EACFyC,IAAWzC,EACT+B,EACFxD,EAAQoE,SAASZ,GAEjB,MAIL1B,EAAYC,EAAYV,MAAc,EAARf,EAAY,EAAW,EAARA,GAYnD,OATEoD,EADE3D,EACa+B,EAAUuC,MAAK,SAAA1E,GAAI,OAAIA,EAAKC,WAAWG,KAAOA,KAE9C+B,EAAUuC,MAAK,SAACC,EAASpD,EAAGqD,GAAb,OAAkD,IAA3BA,EAAMC,QAAQF,SAInE5B,EAAW,CAACgB,EAAaR,SAASD,YAAY,GAAIS,EAAaR,SAASD,YAAY,KAIpF,yBAAKxD,UAAU,OACb,4BAAQA,UAAU,cAChB,kBAAC,EAAD,CACEkC,SAAUA,EACVD,SAAUA,EACVE,MAAOA,EACPH,MAAOA,EACPI,WAAYA,EACZC,UAAWA,EACXC,YAAaA,EACbzB,MAAOA,EACPD,SAAUA,EACVb,MAAOA,KAEX,kBAAC,EAAD,CACEkD,SAAUA,EACVZ,UAAWA,MCxDC2C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.06364510.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Listdata({ datas, setId }) {\n    return (\n        <ul className=\"data-list\">\n            {\n                datas.map(data => {\n                    const { name, phone, id, address } = data.properties;\n                    return (\n                        <li key={id} className=\"data-item\" onClick={() => setId(id)}>\n                            <h3>{name}</h3>\n                            <p>{phone}</p>\n                            <p>{address}</p>\n                            <p>大人{data.properties[\"mask_adult\"]} 小孩{data.properties[\"mask_child\"]}</p>\n                        </li>\n                    )\n                })\n            }\n        </ul>\n    )\n}\n\nexport default Listdata","import React, { useEffect, useState } from 'react'\nimport './pages.css'\n\nfunction Pages({ datasL, setPageD, pageD, setId }) {\n    const [page, setPage] = useState(1);\n    const [pages, setPages] = useState([]);\n    useEffect(() => {\n        counterPages(datasL);\n    }, [datasL])\n\n    const counterPages = L => {\n        let num = L / 5;\n        const pages = [];\n        num = Math.ceil(num);\n        for (let i = 1; i < num; i++) {\n            pages.push(i)\n        }\n        setPages(pages);\n        setPage(pageD);\n    };\n\n    const filterpages = pages.slice(page * 4 - 4, page * 4);\n    return (\n        <ul className=\"pages\">\n            <li>\n                <button\n                    className={pageD === 1 ? \"none\" : ''}\n                    onClick={() => {\n                        setId('');\n                        setPageD(pageD - 1)\n                        if (pageD === filterpages.slice(0)[0]) {\n                            setPage(page - 1);\n                        }\n                    }}>←</button>\n            </li>\n            {filterpages.map((page, i) => {\n                return (\n                    <li key={i}>\n                        <button\n                            className={page === pageD ? 'active' : ''}\n                            onClick={() => {\n                                setId('');\n                                setPageD(page);\n                            }}>{page}</button>\n                    </li>\n                )\n            })}\n            <li>\n                <button\n                    className={pageD === pages.slice(-1)[0] ? \"none\" : ''}\n                    onClick={() => {\n                        setId('');\n                        setPageD(pageD + 1);\n                        if (pageD === filterpages.slice(-1)[0]) {\n                            setPage(page + 1);\n                        }\n                    }}>→</button>\n            </li>\n        </ul>\n    )\n}\n\nexport default Pages","export const area_data = {\n    '臺北市': [\n        '中正區', '大同區', '中山區', '萬華區', '信義區', '松山區', '大安區', '南港區', '北投區', '內湖區', '士林區', '文山區'\n    ],\n    '新北市': [\n        '板橋區', '新莊區', '泰山區', '林口區', '淡水區', '金山區', '八里區', '萬里區', '石門區', '三芝區', '瑞芳區', '汐止區', '平溪區', '貢寮區', '雙溪區', '深坑區', '石碇區', '新店區', '坪林區', '烏來區', '中和區', '永和區', '土城區', '三峽區', '樹林區', '鶯歌區', '三重區', '蘆洲區', '五股區'\n    ],\n    '基隆市': [\n        '仁愛區', '中正區', '信義區', '中山區', '安樂區', '暖暖區', '七堵區'\n    ],\n    '桃園市': [\n        '桃園區', '中壢區', '平鎮區', '八德區', '楊梅區', '蘆竹區', '龜山區', '龍潭區', '大溪區', '大園區', '觀音區', '新屋區', '復興區'\n    ],\n    '新竹縣': [\n        '竹北市', '竹東鎮', '新埔鎮', '關西鎮', '峨眉鄉', '寶山鄉', '北埔鄉', '橫山鄉', '芎林鄉', '湖口鄉', '新豐鄉', '尖石鄉', '五峰鄉'\n    ],\n    '新竹市': [\n        '東區', '北區', '香山區'\n    ],\n    '苗栗縣': [\n        '苗栗市', '通霄鎮', '苑裡鎮', '竹南鎮', '頭份鎮', '後龍鎮', '卓蘭鎮', '西湖鄉', '頭屋鄉', '公館鄉', '銅鑼鄉', '三義鄉', '造橋鄉', '三灣鄉', '南庄鄉', '大湖鄉', '獅潭鄉', '泰安鄉'\n    ],\n    '臺中市': [\n        '中區', '東區', '南區', '西區', '北區', '北屯區', '西屯區', '南屯區', '太平區', '大里區', '霧峰區', '烏日區', '豐原區', '后里區', '東勢區', '石岡區', '新社區', '和平區', '神岡區', '潭子區', '大雅區', '大肚區', '龍井區', '沙鹿區', '梧棲區', '清水區', '大甲區', '外埔區', '大安區'\n    ],\n    '南投縣': [\n        '南投市', '埔里鎮', '草屯鎮', '竹山鎮', '集集鎮', '名間鄉', '鹿谷鄉', '中寮鄉', '魚池鄉', '國姓鄉', '水里鄉', '信義鄉', '仁愛鄉'\n    ],\n    '彰化縣': [\n        '彰化市', '員林鎮', '和美鎮', '鹿港鎮', '溪湖鎮', '二林鎮', '田中鎮', '北斗鎮', '花壇鄉', '芬園鄉', '大村鄉', '永靖鄉', '伸港鄉', '線西鄉', '福興鄉', '秀水鄉', '埔心鄉', '埔鹽鄉', '大城鄉', '芳苑鄉', '竹塘鄉', '社頭鄉', '二水鄉', '田尾鄉', '埤頭鄉', '溪州鄉'\n    ],\n    '雲林縣': [\n        '斗六市', '斗南鎮', '虎尾鎮', '西螺鎮', '土庫鎮', '北港鎮', '莿桐鄉', '林內鄉', '古坑鄉', '大埤鄉', '崙背鄉', '二崙鄉', '麥寮鄉', '臺西鄉', '東勢鄉', '褒忠鄉', '四湖鄉', '口湖鄉', '水林鄉', '元長鄉'\n    ],\n    '嘉義縣': [\n        '太保市', '朴子市', '布袋鎮', '大林鎮', '民雄鄉', '溪口鄉', '新港鄉', '六腳鄉', '東石鄉', '義竹鄉', '鹿草鄉', '水上鄉', '中埔鄉', '竹崎鄉', '梅山鄉', '番路鄉', '大埔鄉', '阿里山鄉'\n    ],\n    '嘉義市': [\n        '東區', '西區'\n    ],\n    '臺南市': [\n        '中西區', '東區', '南區', '北區', '安平區', '安南區', '永康區', '歸仁區', '新化區', '左鎮區', '玉井區', '楠西區', '南化區', '仁德區', '關廟區', '龍崎區', '官田區', '麻豆區', '佳里區', '西港區', '七股區', '將軍區', '學甲區', '北門區', '新營區', '後壁區', '白河區', '東山區', '六甲區', '下營區', '柳營區', '鹽水區', '善化區', '大內區', '山上區', '新市區', '安定區'\n    ],\n    '高雄市': [\n        '楠梓區', '左營區', '鼓山區', '三民區', '鹽埕區', '前金區', '新興區', '苓雅區', '前鎮區', '小港區', '旗津區', '鳳山區', '大寮區', '鳥松區', '林園區', '仁武區', '大樹區', '大社區', '岡山區', '路竹區', '橋頭區', '梓官區', '彌陀區', '永安區', '燕巢區', '田寮區', '阿蓮區', '茄萣區', '湖內區', '旗山區', '美濃區', '內門區', '杉林區', '甲仙區', '六龜區', '茂林區', '桃源區', '那瑪夏區'\n    ],\n    '屏東縣': [\n        '屏東市', '潮州鎮', '東港鎮', '恆春鎮', '萬丹鄉', '長治鄉', '麟洛鄉', '九如鄉', '里港鄉', '鹽埔鄉', '高樹鄉', '萬巒鄉', '內埔鄉', '竹田鄉', '新埤鄉', '枋寮鄉', '新園鄉', '崁頂鄉', '林邊鄉', '南州鄉', '佳冬鄉', '琉球鄉', '車城鄉', '滿州鄉', '枋山鄉', '霧台鄉', '瑪家鄉', '泰武鄉', '來義鄉', '春日鄉', '獅子鄉', '牡丹鄉', '三地門鄉'\n    ],\n    '宜蘭縣': [\n        '宜蘭市', '羅東鎮', '蘇澳鎮', '頭城鎮', '礁溪鄉', '壯圍鄉', '員山鄉', '冬山鄉', '五結鄉', '三星鄉', '大同鄉', '南澳鄉'\n    ],\n    '花蓮縣': [\n        '花蓮市', '鳳林鎮', '玉里鎮', '新城鄉', '吉安鄉', '壽豐鄉', '秀林鄉', '光復鄉', '豐濱鄉', '瑞穗鄉', '萬榮鄉', '富里鄉', '卓溪鄉'\n    ],\n    '臺東縣': [\n        '臺東市', '成功鎮', '關山鎮', '長濱鄉', '海端鄉', '池上鄉', '東河鄉', '鹿野鄉', '延平鄉', '卑南鄉', '金峰鄉', '大武鄉', '達仁鄉', '綠島鄉', '蘭嶼鄉', '太麻里鄉'\n    ],\n    '澎湖縣': [\n        '馬公市', '湖西鄉', '白沙鄉', '西嶼鄉', '望安鄉', '七美鄉'\n    ],\n    '金門縣': [\n        '金城鎮', '金湖鎮', '金沙鎮', '金寧鄉', '烈嶼鄉', '烏坵鄉'\n    ],\n    '連江縣': [\n        '南竿鄉', '北竿鄉', '莒光鄉', '東引鄉'\n    ]\n};\nexport const citys = {\n    \"data\": [\n        \"臺北市\",\n        \"基隆市\",\n        \"新北市\",\n        \"連江縣\",\n        \"宜蘭縣\",\n        \"新竹市\",\n        \"新竹縣\",\n        \"桃園市\",\n        \"苗栗縣\",\n        \"臺中市\",\n        \"彰化縣\",\n        \"南投縣\",\n        \"嘉義市\",\n        \"嘉義縣\",\n        \"雲林縣\",\n        \"臺南市\",\n        \"高雄市\",\n        \"澎湖縣\",\n        \"金門縣\",\n        \"屏東縣\",\n        \"臺東縣\",\n        \"花蓮縣\"\n    ]\n}","import React from 'react'\nimport Listdats from './Listdata';\nimport Pages from './Pages';\nimport { area_data, citys } from './taiwan'\nimport './nav.css'\n\nfunction Nav({ cityF, setCityF, setAreaF, areaF, setKeyWord, sliceData, filterDatas, setPageD, pageD, setId }) {\n    return (\n        <div className=\"sidebar\">\n            <nav className=\"sidebar-navbar\" >\n                <h1 className=\"nav-title\">Find Mask</h1>\n                <div className=\"nav-selection\">\n                    <select\n                        value={cityF ? cityF : ''}\n                        className=\"selection-county\"\n                        onChange={e => {\n                            setCityF(e.target.value);\n                            setAreaF(area_data[e.target.value][0])\n                            setPageD(1)\n                        }}>\n                        <option>--請選擇縣市--</option>\n                        {\n                            citys.data.map((city, i) => {\n                                return <option value={city} key={i} >{city}</option>\n                            })\n                        }\n                    </select>\n                    <select\n                        className=\"selection-area\"\n                        onChange={e => {\n                            setAreaF(e.target.value)\n                            setPageD(1)\n                        }}\n                        value={areaF ? areaF : ''}>\n                        <option>--請選擇地區--</option>\n                        {\n                            cityF ?\n                                area_data[cityF].map((item, i) => {\n                                    return <option key={i} value={item}>{item}</option>\n                                }) : ''\n                        }\n                    </select>\n                </div>\n                <div className=\"nav-search\">\n                    <label htmlFor=\"search-mask\">關鍵字</label>\n                    <input\n                        type=\"text\"\n                        name=\"search-mask\"\n                        className=\"search-mask\"\n                        onChange={e => {\n                            setKeyWord(e.target.value)\n                            setPageD(1)\n                        }} />\n\n                </div>\n            </nav>\n            <Listdats datas={sliceData} setId={setId} />\n            <Pages\n                setId={setId}\n                pageD={pageD}\n                datasL={filterDatas.length}\n                setPageD={setPageD} />\n        </div>\n    )\n}\n\nexport default Nav","import React from 'react'\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet'\nimport \"./main.css\"\n\nfunction Main({ sliceData, position }) {\n\n    return (\n        <Map center={position} zoom={16} id=\"map\">\n            <TileLayer\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n            />\n            {\n                sliceData.map(data => {\n                    const { coordinates } = data.geometry;\n                    const { name, phone, id, address } = data.properties;\n                    const positionM = [coordinates[1], coordinates[0]];\n                    return (\n                        <Marker\n                            position={positionM}\n                            key={id}\n                            id={id} >\n                            <Popup>\n                                <h3>{name}</h3>\n                                <p>{phone}</p>\n                                <p>{address}</p>\n                                <p>大人{data.properties[\"mask_adult\"]} 小孩{data.properties[\"mask_child\"]}</p>\n                            </Popup>\n                                )\n                            }\n                        </Marker>\n                    )\n                })\n            }\n        </Map >\n    )\n}\n\nexport default Main ","import React, { useState, useEffect } from 'react';\nimport Nav from \"./Nav\";\nimport Main from \"./Main\";\nimport './App.css'\n\n\nfunction App() {\n  const [datas, setDatas] = useState([]);\n  const [cityF, setCityF] = useState('');\n  const [areaF, setAreaF] = useState('');\n  const [keyWord, setKeyWord] = useState('');\n  const [pageD, setPageD] = useState(1);\n  const [id, setId] = useState('');\n  useEffect(() => {\n    fetchDatas();\n  }, [])\n  // 連接API取得藥局口罩數量\n  const fetchDatas = async () => {\n    const Url = 'https://raw.githubusercontent.com/kiang/pharmacies/master/json/points.json';\n    const response = await fetch(Url);\n    const result = await response.json();\n    setDatas(result.features);\n    setCityF('臺中市');\n    setAreaF('太平區');\n  };\n  // 假如有選取的縣市或者地區還是關鍵字，資料會更著改變\n  const filterDatas = datas.filter(data => {\n    const { county, town, address } = data.properties;\n    if (areaF && cityF) {\n      return county === cityF && town === areaF\n    } else if (cityF) {\n      return county === cityF\n    } else if (keyWord) {\n      return address.includes(keyWord)\n    } else {\n      return ''\n    }\n  })\n\n  const sliceData = filterDatas.slice(pageD * 5 - 5, pageD * 5);\n  let positionData;\n  if (id) {\n    positionData = sliceData.find(data => data.properties.id === id)\n  } else {\n    positionData = sliceData.find((element, i, array) => array.indexOf(element) === 0)\n  }\n  let position;\n  if (positionData) {\n    position = [positionData.geometry.coordinates[1], positionData.geometry.coordinates[0]];\n  }\n\n  return (\n    <div className=\"App\" >\n      <header className=\"App-header\">\n        <Nav\n          setAreaF={setAreaF}\n          setCityF={setCityF}\n          areaF={areaF}\n          cityF={cityF}\n          setKeyWord={setKeyWord}\n          sliceData={sliceData}\n          filterDatas={filterDatas}\n          pageD={pageD}\n          setPageD={setPageD}\n          setId={setId} />\n      </header>\n      <Main\n        position={position}\n        sliceData={sliceData} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}